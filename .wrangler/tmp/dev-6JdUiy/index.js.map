{
  "version": 3,
  "sources": ["../bundle-WZCIab/checked-fetch.js", "../../../src/index.js", "../../../../../AppData/Roaming/npm/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../../AppData/Roaming/npm/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-WZCIab/middleware-insertion-facade.js", "../../../../../AppData/Roaming/npm/node_modules/wrangler/templates/middleware/common.ts", "../bundle-WZCIab/middleware-loader.entry.ts"],
  "sourceRoot": "C:\\Users\\jason\\Deckbuilder\\meta-tabletop\\.wrangler\\tmp\\dev-6JdUiy",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "/**\r\n * Cloudflare Worker implementing Socket.IO v4 protocol\r\n * Compatible with socket.io-client v4.7.2\r\n */\r\n\r\n// In-memory session storage (use Durable Objects for production persistence)\r\nconst sessions = new Map();\r\nconst rooms = new Map();\r\n\r\n// Generate unique session ID\r\nfunction generateSessionId() {\r\n  return Math.random().toString(36).substring(2) + Date.now().toString(36);\r\n}\r\n\r\n// Generate unique room ID\r\nfunction generateRoomId() {\r\n  return Math.random().toString(36).substring(2, 10);\r\n}\r\n\r\n// CORS headers for cross-origin requests\r\nconst corsHeaders = {\r\n  'Access-Control-Allow-Origin': '*',\r\n  'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',\r\n  'Access-Control-Allow-Headers': 'Content-Type',\r\n  'Access-Control-Allow-Credentials': 'true',\r\n  'Access-Control-Max-Age': '86400',\r\n};\r\n\r\n// Engine.IO packet types\r\nconst ENGINE_IO_PACKETS = {\r\n  OPEN: '0',\r\n  CLOSE: '1', \r\n  PING: '2',\r\n  PONG: '3',\r\n  MESSAGE: '4',\r\n  UPGRADE: '5',\r\n  NOOP: '6'\r\n};\r\n\r\n// Socket.IO packet types\r\nconst SOCKET_IO_PACKETS = {\r\n  CONNECT: '0',\r\n  DISCONNECT: '1',\r\n  EVENT: '2',\r\n  ACK: '3',\r\n  CONNECT_ERROR: '4',\r\n  BINARY_EVENT: '5',\r\n  BINARY_ACK: '6'\r\n};\r\n\r\nexport default {\r\n  async fetch(request, env, ctx) {\r\n    const url = new URL(request.url);\r\n    \r\n    // Handle CORS preflight requests\r\n    if (request.method === 'OPTIONS') {\r\n      return new Response(null, {\r\n        status: 204,\r\n        headers: corsHeaders\r\n      });\r\n    }\r\n    \r\n    // Only handle Socket.IO requests\r\n    if (!url.pathname.startsWith('/socket.io/')) {\r\n      return new Response('Not Found', { \r\n        status: 404,\r\n        headers: corsHeaders \r\n      });\r\n    }\r\n    \r\n    console.log(`Socket.IO request: ${request.method} ${url.pathname}${url.search}`);\r\n    \r\n    const searchParams = url.searchParams;\r\n    const transport = searchParams.get('transport');\r\n    const sid = searchParams.get('sid');\r\n    \r\n    if (request.method === 'GET') {\r\n      if (transport === 'polling') {\r\n        return handlePollingGet(searchParams);\r\n      } else if (transport === 'websocket') {\r\n        // WebSocket upgrade not supported in this implementation\r\n        return new Response('WebSocket not supported', { \r\n          status: 400,\r\n          headers: corsHeaders \r\n        });\r\n      }\r\n    } else if (request.method === 'POST') {\r\n      if (transport === 'polling') {\r\n        return handlePollingPost(request, searchParams);\r\n      }\r\n    }\r\n    \r\n    return new Response('Bad Request', { \r\n      status: 400,\r\n      headers: corsHeaders \r\n    });\r\n  }\r\n};\r\n\r\nasync function handlePollingGet(searchParams) {\r\n  const sid = searchParams.get('sid');\r\n  \r\n  if (!sid) {\r\n    // Initial handshake - create new session\r\n    const sessionId = generateSessionId();\r\n    const handshakeData = {\r\n      sid: sessionId,\r\n      upgrades: [],\r\n      pingInterval: 25000,\r\n      pingTimeout: 20000,\r\n      maxPayload: 1000000\r\n    };\r\n    \r\n    sessions.set(sessionId, {\r\n      id: sessionId,\r\n      connected: false,\r\n      messageQueue: [],\r\n      lastActivity: Date.now()\r\n    });\r\n    \r\n    console.log(`Handshake created for session ${sessionId}`);\r\n    \r\n    const response = ENGINE_IO_PACKETS.OPEN + JSON.stringify(handshakeData);\r\n    return new Response(response, {\r\n      status: 200,\r\n      headers: {\r\n        ...corsHeaders,\r\n        'Content-Type': 'text/plain; charset=UTF-8'\r\n      }\r\n    });\r\n  }\r\n  \r\n  // Existing session - return queued messages or wait\r\n  const session = sessions.get(sid);\r\n  if (!session) {\r\n    return new Response('Session not found', { \r\n      status: 400,\r\n      headers: corsHeaders \r\n    });\r\n  }\r\n  \r\n  console.log(`Polling GET for session ${sid}, connected: ${session.connected}, queue length: ${session.messageQueue.length}`);\r\n  \r\n  session.lastActivity = Date.now();\r\n  \r\n  // If not connected yet, send CONNECT packet\r\n  if (!session.connected) {\r\n    session.connected = true;\r\n    const connectPacket = ENGINE_IO_PACKETS.MESSAGE + SOCKET_IO_PACKETS.CONNECT;\r\n    console.log(`Sending CONNECT packet to session ${sid}: ${connectPacket}`);\r\n    return new Response(connectPacket, {\r\n      status: 200,\r\n      headers: {\r\n        ...corsHeaders,\r\n        'Content-Type': 'text/plain; charset=UTF-8'\r\n      }\r\n    });\r\n  }\r\n  \r\n  // Return queued messages\r\n  if (session.messageQueue.length > 0) {\r\n    const message = session.messageQueue.shift();\r\n    console.log(`Sending queued message to session ${sid}: ${message}`);\r\n    return new Response(message, {\r\n      status: 200,\r\n      headers: {\r\n        ...corsHeaders,\r\n        'Content-Type': 'text/plain; charset=UTF-8'\r\n      }\r\n    });\r\n  }\r\n  \r\n  // No messages - return empty response for long polling\r\n  return new Response('', {\r\n    status: 200,\r\n    headers: {\r\n      ...corsHeaders,\r\n      'Content-Type': 'text/plain; charset=UTF-8'\r\n    }\r\n  });\r\n}\r\n\r\nasync function handlePollingPost(request, searchParams) {\r\n  const sid = searchParams.get('sid');\r\n  const session = sessions.get(sid);\r\n  \r\n  if (!session) {\r\n    return new Response('Session not found', { \r\n      status: 400,\r\n      headers: corsHeaders \r\n    });\r\n  }\r\n  \r\n  const body = await request.text();\r\n  console.log(`Received POST data from session ${sid}: ${body}`);\r\n  \r\n  session.lastActivity = Date.now();\r\n  \r\n  // Parse Engine.IO packets\r\n  const packets = parseEngineIOPackets(body);\r\n  \r\n  for (const packet of packets) {\r\n    console.log(`Engine.IO packet from ${sid}: type=${packet.type}, payload=${packet.payload}`);\r\n    \r\n    if (packet.type === ENGINE_IO_PACKETS.MESSAGE) {\r\n      // Handle Socket.IO message\r\n      const socketIOPacket = parseSocketIOPacket(packet.payload);\r\n      console.log(`Socket.IO packet from ${sid}: type=${socketIOPacket.type}, data=${JSON.stringify(socketIOPacket.data)}`);\r\n      \r\n      if (socketIOPacket.type === SOCKET_IO_PACKETS.EVENT) {\r\n        handleSocketIOEvent(sid, session, socketIOPacket.data);\r\n      }\r\n    } else if (packet.type === ENGINE_IO_PACKETS.PING) {\r\n      // Respond with PONG\r\n      session.messageQueue.push(ENGINE_IO_PACKETS.PONG);\r\n    }\r\n  }\r\n  \r\n  return new Response('ok', {\r\n    status: 200,\r\n    headers: {\r\n      ...corsHeaders,\r\n      'Content-Type': 'text/plain; charset=UTF-8'\r\n    }\r\n  });\r\n}\r\n\r\nfunction parseEngineIOPackets(data) {\r\n  const packets = [];\r\n  let i = 0;\r\n  \r\n  while (i < data.length) {\r\n    // Find packet length\r\n    let lengthEnd = data.indexOf(':', i);\r\n    if (lengthEnd === -1) break;\r\n    \r\n    const length = parseInt(data.substring(i, lengthEnd));\r\n    const packetStart = lengthEnd + 1;\r\n    const packetEnd = packetStart + length;\r\n    \r\n    if (packetEnd > data.length) break;\r\n    \r\n    const packetData = data.substring(packetStart, packetEnd);\r\n    const type = packetData[0];\r\n    const payload = packetData.substring(1);\r\n    \r\n    packets.push({ type, payload });\r\n    i = packetEnd;\r\n  }\r\n  \r\n  return packets;\r\n}\r\n\r\nfunction parseSocketIOPacket(data) {\r\n  if (!data) return { type: null, data: null };\r\n  \r\n  const type = data[0];\r\n  const payload = data.substring(1);\r\n  \r\n  try {\r\n    const parsed = JSON.parse(payload);\r\n    return { type, data: parsed };\r\n  } catch (e) {\r\n    return { type, data: payload };\r\n  }\r\n}\r\n\r\nfunction handleSocketIOEvent(sessionId, session, eventData) {\r\n  if (!Array.isArray(eventData) || eventData.length === 0) return;\r\n  \r\n  const eventName = eventData[0];\r\n  const eventPayload = eventData[1] || {};\r\n  \r\n  console.log(`Socket.IO event from ${sessionId}: ${eventName} ${JSON.stringify(eventPayload)}`);\r\n  \r\n  switch (eventName) {\r\n    case 'createRoom':\r\n      const roomId = generateRoomId();\r\n      rooms.set(roomId, {\r\n        id: roomId,\r\n        host: sessionId,\r\n        players: [sessionId],\r\n        createdAt: Date.now()\r\n      });\r\n      \r\n      session.roomId = roomId;\r\n      console.log(`Room ${roomId} created for session ${sessionId}`);\r\n      \r\n      // Queue response\r\n      const createResponse = ENGINE_IO_PACKETS.MESSAGE + SOCKET_IO_PACKETS.EVENT + \r\n        JSON.stringify(['createdRoom', { roomId, isHost: true }]);\r\n      session.messageQueue.push(createResponse);\r\n      break;\r\n      \r\n    case 'joinRoom':\r\n      const targetRoomId = eventPayload.roomId;\r\n      const room = rooms.get(targetRoomId);\r\n      \r\n      if (room && !room.players.includes(sessionId)) {\r\n        room.players.push(sessionId);\r\n        session.roomId = targetRoomId;\r\n        \r\n        console.log(`Session ${sessionId} joined room ${targetRoomId}`);\r\n        \r\n        // Queue response\r\n        const joinResponse = ENGINE_IO_PACKETS.MESSAGE + SOCKET_IO_PACKETS.EVENT + \r\n          JSON.stringify(['joinedRoom', { roomId: targetRoomId, isHost: false }]);\r\n        session.messageQueue.push(joinResponse);\r\n        \r\n        // Notify other players\r\n        broadcastToRoom(targetRoomId, 'playerJoined', { sessionId }, sessionId);\r\n      }\r\n      break;\r\n      \r\n    case 'chatMessage':\r\n      if (session.roomId) {\r\n        broadcastToRoom(session.roomId, 'chatMessage', {\r\n          message: eventPayload.message,\r\n          from: sessionId,\r\n          time: new Date().toISOString(),\r\n          type: eventPayload.type || 'chat'\r\n        });\r\n      }\r\n      break;\r\n      \r\n    case 'logMessage':\r\n      if (session.roomId) {\r\n        broadcastToRoom(session.roomId, 'logMessage', {\r\n          log: eventPayload.log,\r\n          from: sessionId,\r\n          time: new Date().toISOString()\r\n        });\r\n      }\r\n      break;\r\n      \r\n    default:\r\n      console.log(`Unknown event: ${eventName}`);\r\n  }\r\n}\r\n\r\nfunction broadcastToRoom(roomId, eventName, data, excludeSessionId = null) {\r\n  const room = rooms.get(roomId);\r\n  if (!room) return;\r\n  \r\n  const message = ENGINE_IO_PACKETS.MESSAGE + SOCKET_IO_PACKETS.EVENT + \r\n    JSON.stringify([eventName, data]);\r\n  \r\n  for (const playerId of room.players) {\r\n    if (playerId !== excludeSessionId) {\r\n      const playerSession = sessions.get(playerId);\r\n      if (playerSession) {\r\n        playerSession.messageQueue.push(message);\r\n      }\r\n    }\r\n  }\r\n} ", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"C:\\\\Users\\\\jason\\\\Deckbuilder\\\\meta-tabletop\\\\src\\\\index.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"C:\\\\Users\\\\jason\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"C:\\\\Users\\\\jason\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"C:\\\\Users\\\\jason\\\\Deckbuilder\\\\meta-tabletop\\\\src\\\\index.js\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"C:\\\\Users\\\\jason\\\\Deckbuilder\\\\meta-tabletop\\\\.wrangler\\\\tmp\\\\bundle-WZCIab\\\\middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"C:\\\\Users\\\\jason\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\nimport type { WorkerEntrypointConstructor } from \"C:\\\\Users\\\\jason\\\\Deckbuilder\\\\meta-tabletop\\\\.wrangler\\\\tmp\\\\bundle-WZCIab\\\\middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"C:\\\\Users\\\\jason\\\\Deckbuilder\\\\meta-tabletop\\\\.wrangler\\\\tmp\\\\bundle-WZCIab\\\\middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": []
}
